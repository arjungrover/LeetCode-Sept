class Solution {
    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {
        if(nums.length==0 || k<0 || t<0)
            return false;
        
        HashMap<Integer, Integer> buckets = new HashMap<>();
        int width = t+1;
        
        for(int i=0;i<nums.length;i++){
            
        int bucket = (int)Math.floorDiv(nums[i],width);
        if(buckets.containsKey(bucket))
                return true;
            
        buckets.put(bucket, nums[i]);
        if(buckets.containsKey(bucket+1) && (Math.abs( (long)buckets.get(bucket+1)-(long)nums[i])<=t) )
                return true;
        if(buckets.containsKey(bucket-1) && (Math.abs( (long)buckets.get(bucket-1)-(long)nums[i]))<=t )
                return true;
        
        //window size cant be more than k
        if(buckets.size()>k)
            buckets.remove((int)Math.floorDiv(nums[i-k],width));
            
        }
        
        
        return false;
    }
}